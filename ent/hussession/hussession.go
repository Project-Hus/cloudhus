// Code generated by ent, DO NOT EDIT.

package hussession

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the hussession type in the database.
	Label = "hus_session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIat holds the string denoting the iat field in the database.
	FieldIat = "iat"
	// FieldExp holds the string denoting the exp field in the database.
	FieldExp = "exp"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the hussession in the database.
	Table = "hus_sessions"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "hus_sessions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "uid"
)

// Columns holds all SQL columns for hussession fields.
var Columns = []string{
	FieldID,
	FieldIat,
	FieldExp,
	FieldUID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIat holds the default value on creation for the "iat" field.
	DefaultIat func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
