// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ConnectedSessionsColumns holds the columns for the "connected_sessions" table.
	ConnectedSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "service", Type: field.TypeString},
		{Name: "csid", Type: field.TypeUUID, Unique: true},
		{Name: "hsid", Type: field.TypeUUID},
	}
	// ConnectedSessionsTable holds the schema information for the "connected_sessions" table.
	ConnectedSessionsTable = &schema.Table{
		Name:       "connected_sessions",
		Columns:    ConnectedSessionsColumns,
		PrimaryKey: []*schema.Column{ConnectedSessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connected_sessions_hus_sessions_connected_session",
				Columns:    []*schema.Column{ConnectedSessionsColumns[3]},
				RefColumns: []*schema.Column{HusSessionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connectedsession_service_csid",
				Unique:  true,
				Columns: []*schema.Column{ConnectedSessionsColumns[1], ConnectedSessionsColumns[2]},
			},
		},
	}
	// HusSessionsColumns holds the columns for the "hus_sessions" table.
	HusSessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "tid", Type: field.TypeUUID},
		{Name: "iat", Type: field.TypeTime},
		{Name: "preserved", Type: field.TypeBool, Default: false},
		{Name: "signed_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "uid", Type: field.TypeUint64, Nullable: true},
	}
	// HusSessionsTable holds the schema information for the "hus_sessions" table.
	HusSessionsTable = &schema.Table{
		Name:       "hus_sessions",
		Columns:    HusSessionsColumns,
		PrimaryKey: []*schema.Column{HusSessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hus_sessions_users_hus_sessions",
				Columns:    []*schema.Column{HusSessionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "provider", Type: field.TypeEnum, Enums: []string{"hus", "google"}},
		{Name: "google_sub", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "email_verified", Type: field.TypeBool},
		{Name: "name", Type: field.TypeString},
		{Name: "given_name", Type: field.TypeString},
		{Name: "family_name", Type: field.TypeString},
		{Name: "birthdate", Type: field.TypeTime, Nullable: true},
		{Name: "profile_picture_url", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ConnectedSessionsTable,
		HusSessionsTable,
		UsersTable,
	}
)

func init() {
	ConnectedSessionsTable.ForeignKeys[0].RefTable = HusSessionsTable
	ConnectedSessionsTable.Annotation = &entsql.Annotation{
		Options: "ENGINE=MEMORY",
	}
	HusSessionsTable.ForeignKeys[0].RefTable = UsersTable
	HusSessionsTable.Annotation = &entsql.Annotation{
		Options: "ENGINE=MEMORY",
	}
}
