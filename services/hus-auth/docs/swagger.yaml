basePath: /auth
host: auth.cloudhus.com
info:
  contact:
    email: lifthus531@gmail.com
    name: API Support
    url: https://github.com/lifthus
  description: This is Cloudhus's root authentication server.
  license:
    name: MIT
    url: '-'
  termsOfService: http://swagger.io/terms/
  title: Cloudhus auth server
  version: 0.0.0
paths:
  /demo/sso:
    get:
      responses:
        "200":
          description: Ok, session is well-handled
        "400":
          description: Bad Request, something's wrong
        "500":
          description: Internal Server Error, something's wrong
      summary: shows the SSO feature between Cloudhus and Lifthus.
      tags:
      - auth
  /hus:
    get:
      description: |-
        this endpoint can be used both for Cloudhus and subservices.
        if the subservice redirects the client to this endpoint with service name, session id and redirect url, its session will be connected to Hus session.
        and if fallback url is given, it will redirect to fallback url if it fails.
        note that all urls must be url-encoded.
      parameters:
      - description: subservice name
        in: query
        name: service
        required: true
        type: string
      - description: redirect url
        in: query
        name: redirect
        required: true
        type: string
      - description: fallback url
        in: query
        name: fallback
        type: string
      - description: subservice session id
        in: query
        name: sid
        required: true
        type: string
      responses:
        "303":
          description: See Other, redirection
      summary: checks and issues the Hus session token
      tags:
      - auth
  /hus/connect/{token}:
    get:
      description: the token has properties pps, service and sid.
      parameters:
      - description: pps, service name, session ID in signed token which expires only
          in 10 seconds
        in: path
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Ok, session has been connected
        "400":
          description: Bad Request
        "404":
          description: Not Found, no such connected session
      summary: gets connection token from subservice and returns Hus session ID and
        user info
      tags:
      - auth
  /hus/sign/social/google:
    post:
      consumes:
      - application/json
      description: |-
        validates the google ID token and do some authentication stuff.
        and redirects the user back to the given redirect url after the process is done.
        note that all urls must be url-encoded.
      parameters:
      - description: url to be redirected after authentication
        in: query
        name: redirect
        required: true
        type: string
      - description: subservice session id
        in: query
        name: sid
        required: true
        type: string
      - description: url to be redirected if the authentication fails
        in: query
        name: fallback
        type: string
      - description: Google ID token
        in: body
        name: credential
        required: true
        schema:
          type: string
      responses:
        "303":
          description: See Other
      summary: gets and processes Google ID token and redirects the user back to the
        given redirect url.
      tags:
      - auth
  /hus/signout:
    patch:
      description: |-
        there are two types of signout process.
        1) sign out sessions related only to given hus session.
        2) sign out all related sessions to the user.
      parameters:
      - description: sign out token
        in: path
        name: token
        required: true
        type: string
      responses:
        "200":
          description: Ok, session has been signed out
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: gets signout token from subservice and does signout process.
      tags:
      - auth
swagger: "2.0"
