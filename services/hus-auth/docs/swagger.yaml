basePath: /auth
host: auth.cloudhus.com
info:
  contact:
    email: lifthus531@gmail.com
    name: API Support
    url: https://github.com/lifthus
  description: This is Cloudhus's root authentication server.
  license:
    name: MIT
    url: '-'
  termsOfService: http://swagger.io/terms/
  title: Cloudhus auth server
  version: 0.0.0
paths:
  /session/check/{service}/{sid}:
    post:
      description: |-
        checks the service and sid and tells the subservice server that the client is signed in.
        after the subservice server updates the session and responds with 200,
        Hus auth server also reponds with 200 to the client.
      parameters:
      - description: subservice name
        in: path
        name: service
        required: true
        type: string
      - description: session id
        in: path
        name: sid
        required: true
        type: string
      responses:
        "200":
          description: Ok, theclient now should go to subservice's signing endpoint
        "401":
          description: Unauthorized, the client is not signed in
        "404":
          description: Not Found, the service is not registered
        "500":
          description: Internal Server Error
      summary: chekcs the service and sid and tells the subservice server that the
        client is signed in.
      tags:
      - auth
  /session/revoke:
    delete:
      description: can be used to sign out.
      parameters:
      - description: Hus session tokens in cookie
        in: header
        name: jwt
        type: string
      responses:
        "200":
          description: Ok
        "500":
          description: doesn't have to be handled
      summary: revokes every hus session in cookie from database.
      tags:
      - auth
  /social/google/{subservice_name}:
    post:
      consumes:
      - application/json
      description: |-
        validates the google ID token and redirects with hus refresh token to /auth/{token_string}.
        the refresh token will be expired in 7 days.
      parameters:
      - description: subservice name
        in: path
        name: subservice_name
        required: true
        type: string
      - description: Google ID token
        in: body
        name: jwt
        required: true
        schema:
          type: string
      responses:
        "301":
          description: to /auth/{token_string} or to /error
      summary: gets google IDtoken and redirect with hus session cookie.
      tags:
      - auth
swagger: "2.0"
