AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cloudhus serverless microservices

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        GOOGLE_CLIENT_ID: !Sub "{{resolve:ssm:GOOGLE_CLIENT_ID:1}}"
        HUS_AUTH_DB_NAME: !Sub "{{resolve:ssm:HUS_AUTH_DB_NAME:1}}"
        HUS_AUTH_DB_PASSWORD: !Sub "{{resolve:ssm:HUS_AUTH_DB_PASSWORD:1}}"
        HUS_AUTH_DB_USER: !Sub "{{resolve:ssm:HUS_AUTH_DB_USER:1}}"
        HUS_DB_HOST: !Sub "{{resolve:ssm:HUS_DB_HOST:1}}"
        HUS_DB_PORT: !Sub "{{resolve:ssm:HUS_DB_PORT:1}}"
        HUS_SECRET_KEY: !Sub "{{resolve:ssm:HUS_SECRET_KEY:1}}"
        GOENV: production # --env-vars takes precedence over this in sam local
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
      AllowMethods: "'*'"
      MaxAge: 43200 # preflight cache
      #AllowCredentials: true # with wildcard origin, this is not allowed actually.
    TracingEnabled: true

Resources:
  # auth subdomain and service ==================================================
  HusAuthApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      # Auth:
      # Authorizer: NONE
      # ApiKeyRequired: false
      # AddDefaultAuthorizerToCorsPreflight: false
      Name: HusAuthApi
      StageName: prod
      Domain:
        DomainName: "auth.cloudhus.com"
        CertificateArn: !Sub "{{resolve:ssm:CLOUDHUS_ACM_ARN:1}}"
        EndpointConfiguration: REGIONAL
        BasePath: ""
        Route53:
          HostedZoneId: !Sub "{{resolve:ssm:CLOUDHUS_HOSTED_ZONE_ID:1}}}"
          RecordName: "auth.cloudhus.com"
  HusAuthService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/hus-auth/
      Handler: hus-auth
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        HusAuthServiceRoot:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HusAuthApi
            Path: "/"
            Method: ANY
        HusAuthServiceProxy:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HusAuthApi
            Path: /{proxy+}
            Method: ANY

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
          - ""
          - - ApplicationInsights-SAM-
            - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
          - ""
          - - ApplicationInsights-SAM-
            - Ref: AWS::StackName
      AutoConfigurationEnabled: "true"
    DependsOn: ApplicationResourceGroup
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: First Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
